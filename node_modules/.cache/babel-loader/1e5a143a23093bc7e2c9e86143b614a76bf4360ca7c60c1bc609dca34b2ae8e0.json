{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [task, setTask] = useState('');\n  const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem('tasks')) || []);\n  const [completedTasks, setCompletedTasks] = useState(JSON.parse(localStorage.getItem('completedTasks')) || []);\n  const [showModal, setShowModal] = useState(false);\n  const handleAddTask = () => {\n    if (task.trim()) {\n      const updatedTasks = [...tasks, task];\n      setTasks(updatedTasks);\n      localStorage.setItem('tasks', JSON.stringify(updatedTasks)); // Save tasks to localStorage\n      setTask('');\n      setShowModal(true);\n      setTimeout(() => setShowModal(false), 2000); // Hide modal after 2 seconds\n    }\n  };\n  const handleTaskClick = taskToMove => {\n    const updatedTasks = tasks.filter(t => t !== taskToMove);\n    const updatedCompletedTasks = [...completedTasks, taskToMove];\n    setTasks(updatedTasks);\n    setCompletedTasks(updatedCompletedTasks);\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n    localStorage.setItem('completedTasks', JSON.stringify(updatedCompletedTasks));\n  };\n  const handleShowCompletedTasks = () => {\n    const newWindow = window.open();\n    newWindow.document.write(`\n      <html>\n        <head><title>Completed Tasks</title></head>\n        <body>\n          <h3>Completed Tasks</h3>\n          <ul>\n            ${completedTasks.length > 0 ? completedTasks.map(task => `<li>${task}</li>`).join('') : '<p>No completed tasks.</p>'}\n          </ul>\n        </body>\n      </html>\n    `);\n  };\n  const handleViewYourTasks = () => {\n    const newWindow = window.open();\n    newWindow.document.write(`\n      <html>\n        <head>\n          <title>Your Tasks</title>\n          <style>\n            body {\n              font-family: Arial, sans-serif;\n              padding: 20px;\n              text-align: center;\n            }\n            h3 {\n              font-size: 24px;\n            }\n            ul {\n              list-style-type: none;\n              padding-left: 0;\n            }\n            li {\n              background-color: #e3e3e3;\n              margin: 10px 0;\n              padding: 10px;\n              border-radius: 4px;\n              font-size: 18px;\n              cursor: pointer;\n              transition: background-color 0.3s ease;\n            }\n            li:hover {\n              background-color: #ddd;\n            }\n          </style>\n        </head>\n        <body>\n          <h3>Your Tasks</h3>\n          <ul>\n            ${tasks.length > 0 ? tasks.map(task => `<li onclick=\"window.opener.postMessage('${task}', '*')\">${task}</li>`).join('') : '<p>No tasks available.</p>'}\n          </ul>\n        </body>\n      </html>\n    `);\n  };\n\n  // Handle message from the \"Your Tasks\" page to move a task to completed\n  window.addEventListener('message', event => {\n    const taskToMove = event.data;\n    if (taskToMove) {\n      handleTaskClick(taskToMove);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello Folk\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\\"Hello Hi\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Your Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: task,\n        onChange: e => setTask(e.target.value),\n        placeholder: \"Enter your task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-btn\",\n        onClick: handleAddTask,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"view-btn\",\n        onClick: handleViewYourTasks,\n        children: \"View Your Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"show-completed-btn\",\n        onClick: handleShowCompletedTasks,\n        children: \"Show Completed Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Task Successfully Added!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"QBAMIX7Jz6zxeWOq98aO1DE/m3A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","task","setTask","tasks","setTasks","JSON","parse","localStorage","getItem","completedTasks","setCompletedTasks","showModal","setShowModal","handleAddTask","trim","updatedTasks","setItem","stringify","setTimeout","handleTaskClick","taskToMove","filter","t","updatedCompletedTasks","handleShowCompletedTasks","newWindow","window","open","document","write","length","map","join","handleViewYourTasks","addEventListener","event","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/my-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [task, setTask] = useState('');\n  const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem('tasks')) || []);\n  const [completedTasks, setCompletedTasks] = useState(JSON.parse(localStorage.getItem('completedTasks')) || []);\n  const [showModal, setShowModal] = useState(false);\n\n  const handleAddTask = () => {\n    if (task.trim()) {\n      const updatedTasks = [...tasks, task];\n      setTasks(updatedTasks);\n      localStorage.setItem('tasks', JSON.stringify(updatedTasks)); // Save tasks to localStorage\n      setTask('');\n      setShowModal(true);\n      setTimeout(() => setShowModal(false), 2000); // Hide modal after 2 seconds\n    }\n  };\n\n  const handleTaskClick = (taskToMove) => {\n    const updatedTasks = tasks.filter((t) => t !== taskToMove);\n    const updatedCompletedTasks = [...completedTasks, taskToMove];\n    setTasks(updatedTasks);\n    setCompletedTasks(updatedCompletedTasks);\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n    localStorage.setItem('completedTasks', JSON.stringify(updatedCompletedTasks));\n  };\n\n  const handleShowCompletedTasks = () => {\n    const newWindow = window.open();\n    newWindow.document.write(`\n      <html>\n        <head><title>Completed Tasks</title></head>\n        <body>\n          <h3>Completed Tasks</h3>\n          <ul>\n            ${completedTasks.length > 0\n              ? completedTasks.map((task) => `<li>${task}</li>`).join('')\n              : '<p>No completed tasks.</p>'}\n          </ul>\n        </body>\n      </html>\n    `);\n  };\n\n  const handleViewYourTasks = () => {\n    const newWindow = window.open();\n    newWindow.document.write(`\n      <html>\n        <head>\n          <title>Your Tasks</title>\n          <style>\n            body {\n              font-family: Arial, sans-serif;\n              padding: 20px;\n              text-align: center;\n            }\n            h3 {\n              font-size: 24px;\n            }\n            ul {\n              list-style-type: none;\n              padding-left: 0;\n            }\n            li {\n              background-color: #e3e3e3;\n              margin: 10px 0;\n              padding: 10px;\n              border-radius: 4px;\n              font-size: 18px;\n              cursor: pointer;\n              transition: background-color 0.3s ease;\n            }\n            li:hover {\n              background-color: #ddd;\n            }\n          </style>\n        </head>\n        <body>\n          <h3>Your Tasks</h3>\n          <ul>\n            ${tasks.length > 0\n              ? tasks.map((task) => `<li onclick=\"window.opener.postMessage('${task}', '*')\">${task}</li>`).join('')\n              : '<p>No tasks available.</p>'}\n          </ul>\n        </body>\n      </html>\n    `);\n  };\n\n  // Handle message from the \"Your Tasks\" page to move a task to completed\n  window.addEventListener('message', (event) => {\n    const taskToMove = event.data;\n    if (taskToMove) {\n      handleTaskClick(taskToMove);\n    }\n  });\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Hello Folk</h1>\n        <p>\"Hello Hi\"</p>\n      </header>\n      <div className=\"task-input\">\n        <h2>Add Your Task</h2>\n        <input\n          type=\"text\"\n          value={task}\n          onChange={(e) => setTask(e.target.value)}\n          placeholder=\"Enter your task\"\n        />\n      </div>\n      <div className=\"buttons\">\n        <button className=\"add-btn\" onClick={handleAddTask}>Add</button>\n        <button className=\"view-btn\" onClick={handleViewYourTasks}>View Your Tasks</button>\n        <button className=\"show-completed-btn\" onClick={handleShowCompletedTasks}>Show Completed Tasks</button>\n      </div>\n\n      {/* Modal Pop-up */}\n      {showModal && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h3>Task Successfully Added!</h3>\n          </div>\n        </div>\n      )}\n\n      {/* Task List */}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}