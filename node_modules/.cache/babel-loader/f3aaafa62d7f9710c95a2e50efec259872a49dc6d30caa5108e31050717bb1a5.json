{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';\nimport './App.css';\nimport TaskPage from './TaskPage'; // Import the TaskPage component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [task, setTask] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const handleAddTask = () => {\n    if (task.trim()) {\n      const updatedTasks = [...tasks, task];\n      setTasks(updatedTasks);\n      localStorage.setItem('tasks', JSON.stringify(updatedTasks)); // Save tasks to localStorage\n      setTask('');\n      setShowModal(true);\n      setTimeout(() => setShowModal(false), 2000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Hello Folk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\\"Hello Hi\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add Your Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: task,\n          onChange: e => setTask(e.target.value),\n          placeholder: \"Enter your task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-btn\",\n          onClick: handleAddTask,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/task-list\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"view-btn\",\n            children: \"View Your Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Task Successfully Added!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/task-list\",\n        element: /*#__PURE__*/_jsxDEV(TaskPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"MKOzkCoTmbSrMTXpf79uF/rhaJc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Link","Routes","TaskPage","jsxDEV","_jsxDEV","App","_s","task","setTask","tasks","setTasks","showModal","setShowModal","handleAddTask","trim","updatedTasks","localStorage","setItem","JSON","stringify","setTimeout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","to","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Dell/my-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';\nimport './App.css';\nimport TaskPage from './TaskPage'; // Import the TaskPage component\n\nconst App = () => {\n  const [task, setTask] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n\n  const handleAddTask = () => {\n    if (task.trim()) {\n      const updatedTasks = [...tasks, task];\n      setTasks(updatedTasks);\n      localStorage.setItem('tasks', JSON.stringify(updatedTasks)); // Save tasks to localStorage\n      setTask('');\n      setShowModal(true);\n      setTimeout(() => setShowModal(false), 2000);\n    }\n  };\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <header>\n          <h1>Hello Folk</h1>\n          <p>\"Hello Hi\"</p>\n        </header>\n        <div className=\"task-input\">\n          <h2>Add Your Task</h2>\n          <input\n            type=\"text\"\n            value={task}\n            onChange={(e) => setTask(e.target.value)}\n            placeholder=\"Enter your task\"\n          />\n        </div>\n        <div className=\"buttons\">\n          <button className=\"add-btn\" onClick={handleAddTask}>Add</button>\n          <Link to=\"/task-list\">\n            <button className=\"view-btn\">View Your Tasks</button>\n          </Link>\n        </div>\n\n        {/* Modal Pop-up */}\n        {showModal && (\n          <div className=\"modal\">\n            <div className=\"modal-content\">\n              <h3>Task Successfully Added!</h3>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Routes */}\n      <Routes>\n        <Route path=\"/task-list\" element={<TaskPage />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,MAAM,QAAQ,kBAAkB;AAC/E,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMiB,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIN,IAAI,CAACO,IAAI,CAAC,CAAC,EAAE;MACf,MAAMC,YAAY,GAAG,CAAC,GAAGN,KAAK,EAAEF,IAAI,CAAC;MACrCG,QAAQ,CAACK,YAAY,CAAC;MACtBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACJ,YAAY,CAAC,CAAC,CAAC,CAAC;MAC7DP,OAAO,CAAC,EAAE,CAAC;MACXI,YAAY,CAAC,IAAI,CAAC;MAClBQ,UAAU,CAAC,MAAMR,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;IAC7C;EACF,CAAC;EAED,oBACER,OAAA,CAACN,MAAM;IAAAuB,QAAA,gBACLjB,OAAA;MAAKkB,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACxBjB,OAAA;QAAAiB,QAAA,gBACEjB,OAAA;UAAAiB,QAAA,EAAI;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnBtB,OAAA;UAAAiB,QAAA,EAAG;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACTtB,OAAA;QAAKkB,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACzBjB,OAAA;UAAAiB,QAAA,EAAI;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBtB,OAAA;UACEuB,IAAI,EAAC,MAAM;UACXC,KAAK,EAAErB,IAAK;UACZsB,QAAQ,EAAGC,CAAC,IAAKtB,OAAO,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UACzCI,WAAW,EAAC;QAAiB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNtB,OAAA;QAAKkB,SAAS,EAAC,SAAS;QAAAD,QAAA,gBACtBjB,OAAA;UAAQkB,SAAS,EAAC,SAAS;UAACW,OAAO,EAAEpB,aAAc;UAAAQ,QAAA,EAAC;QAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChEtB,OAAA,CAACJ,IAAI;UAACkC,EAAE,EAAC,YAAY;UAAAb,QAAA,eACnBjB,OAAA;YAAQkB,SAAS,EAAC,UAAU;YAAAD,QAAA,EAAC;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,EAGLf,SAAS,iBACRP,OAAA;QAAKkB,SAAS,EAAC,OAAO;QAAAD,QAAA,eACpBjB,OAAA;UAAKkB,SAAS,EAAC,eAAe;UAAAD,QAAA,eAC5BjB,OAAA;YAAAiB,QAAA,EAAI;UAAwB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGNtB,OAAA,CAACH,MAAM;MAAAoB,QAAA,eACLjB,OAAA,CAACL,KAAK;QAACoC,IAAI,EAAC,YAAY;QAACC,OAAO,eAAEhC,OAAA,CAACF,QAAQ;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAACpB,EAAA,CAvDID,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAyDT,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}